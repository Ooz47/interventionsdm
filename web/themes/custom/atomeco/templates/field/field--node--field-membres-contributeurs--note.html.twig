{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{%
  set title_classes = [
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}
{%
  set custom_classes = [
  'field-contributeurs',
  ]
%}




{# {{ kint(items.0.content['#entity']) }}
{{ kint(items.0.content) }}
{{ kint(items.0.content['#url']) }} #}
{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(custom_classes) }}>
      {% for item in items %}
        {# <div{{ item.attributes }}>{{ item.content }}</div> #}

	{% set nom = item.content['#entity'].get('field_nom').value %}
  {% set prenom = item.content['#entity'].get('field_prenom').value%}
  {%
  set custom_link =  url('<front>')| render ~ string_link ~'/membres/'~  nom|clean_class ~ '-' ~ prenom|clean_class 
%}

        <div{{ item.attributes }}> <a href="{{ custom_link| trans }}" >{{ nom }} {{ prenom }}</a></div>
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      <div{{ attributes.addClass(custom_classes) }}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{ attributes }}>
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
      <div>
    {% endif %}
    {% for item in items %}
      <div{{ item.attributes.addClass(custom_classes) }}>{{ item.content }}</div>
    {% endfor %}
    {% if multiple %}
      </div>
    {% endif %}
  </div>
{% endif %}
